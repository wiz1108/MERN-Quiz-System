{"version":3,"sources":["firebase/firebase.js","screens/LoadingScreen.js","screens/Home.js","components/AddQuestionModal.js","components/QuestionsTable.js","screens/AttemptQuiz.js","screens/CreateQuiz.js","screens/JoinQuiz.js","components/CreatedQuizCard.js","components/JoinedQuizCard.js","screens/UserDashboard.js","screens/CreatedSuccessfully.js","screens/NotFoundPage.js","screens/AttemptedModal.js","components/Sidebar.js","components/AppBar.js","components/ResponsesTable.js","screens/Responses.js","screens/AttemptBlindQuiz.js","components/UsernameModal.js","screens/AdminDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","analytics","auth","LoadingScreen","className","style","fontSize","color","width","height","type","Home","setUser","useState","loading","setLoading","path","setPath","uiConfig","signInflow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","isMounted","onAuthStateChanged","user","a","fetch","method","body","JSON","stringify","name","currentUser","displayName","headers","res","json","localStorage","setItem","id","uid","email","push","to","backgroundColor","borderRadius","firebaseAuth","useStyles","makeStyles","theme","root","modal","display","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","padding","spacing","outline","buttons","AddQuestionModal","title","opType","opArray","index","addQuestionHandle","classes","editQuestionHandle","React","open","setOpen","optionType","setOptionType","optionsArray","setOptionsArray","editedOption","setEditedOption","editOpIndex","setEditOpIndex","titleField","setTitleField","optionsRef","useRef","checkBoxRef","handleOpen","onClick","IconButton","EditRounded","Modal","aria-labelledby","aria-describedby","disableEnforceFocus","Row","autoFocus","value","onChange","e","target","placeholder","map","option","ind","disabled","checked","isCorrect","text","Icon","temp","saveEdited","SaveRounded","handleEdit","splice","deleteHandler","DeleteRounded","ref","length","current","arr","findIndex","op","forEach","alert","variant","tempArr","filter","addQuestionCallBack","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","questionArray","setQuestionArray","Toolbar","clsx","Typography","component","element","aria-label","Delete","margin","marginBottom","table","minWidth","border","clip","overflow","position","top","QuestionsTable","rows","question","options","choice","setOrder","setOrderBy","page","setPage","emptyRows","Math","min","Paper","TableContainer","Table","size","newSelects","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","socket","CreateQuiz","quizTitle","questions","isOpen","editQuizHandle","showToast","setTitle","access","setAccess","quizCode","setQuizCode","createQuiz","result","quizId","autocomplete","Switch","JoinQuiz","valid","setValid","code","setCode","undefined","getItem","handleJoinQuiz","fontweight","onKeyPress","key","CreatedQuizCard","setEditQuiz","deleteQuiz","Card","Img","src","Body","Title","substr","ListGroup","ListGroupItem","JoinedQuizCard","joinQuiz","Button","UserDashboard","createdQuizzes","setCreatedQuizzes","editQuiz","allQuizzes","setAllQuizzes","results","quizData","createdQuiz","fetchQuizData","console","dir","_id","submitData","Carousel","Item","interval","alt","Caption","quiz","CreatedSuccessfully","match","Copy","setCopy","params","onCopy","NotFoundPage","textAlign","AttemptedModal","totalScore","showModal","error","AttemptQuiz","handleOptionSelect","number","state","attemptedQuestions","selectedOptions","find","opt","score","getMark","currentScore","evaluateQuiz","emit","setState","time","mark","showMark","setTimeout","increaseNumber","correctOptions","weightage","qScore","selectedOp","checkNext","submitQuiz","realQues","log","quizQuestions","x","attemptedOptions","cnt","i","toFixed","hideModal","handleMusic","music","audio","pause","play","render","students","flexGrow","marginTop","MusicNote","MusicOff","flexDirection","window","innerHeight","std","Badge","pill","bg","url","Audio","addEventListener","this","io","username","on","close","Component","Sidebar","setUsername","signOut","setSignOut","SidedbarData","icon","Dashboard","CName","MeetingRoom","CreateNewFolder","sidebar","setSidebar","showSidebar","removeItem","MenuRounded","MenuOpenRounded","item","ExitToApp","AppBar","marginRight","paddingTop","AccountCircle","StyledTableCell","withStyles","head","common","white","StyledTableRow","action","ResponsesTable","responses","resp","Responses","setResponses","finalResponse","getResponses","AttemptBlindQuiz","commands","setCommands","speak","string","synthRef","SpeechSynthesisUtterance","currentIndex","setCurrentIndex","setQuestions","setAttemptedQuestions","setQuizTitle","setResult","setShowModal","useSpeechRecognition","resetTranscript","transcript","speechSynthesis","spaceFunction","useCallback","keyCode","SpeechRecognition","startListening","continuous","browserSupportsSpeechRecognition","document","removeEventListener","abortListening","fetchQuiz","speakQuestion","command","callback","cancel","matchInterim","some","includes","selectOption","Number","isInteger","Object","keys","dummy","UsernameModal","setName","innerWidth","AdminDashboard","show","setShow","toastTitle","toastContent","Col","xs","ToastContainer","Toast","onClose","delay","autohide","animation","Header","App","setToastTitle","setToastContent","metadata","lastSignInTime","creationTime","createUserInDB","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86ef6e88.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// var firebaseConfig = {\r\n//     apiKey: \"AIzaSyANZi6Xc7B1_14-RfEJ7KV9b9nkcZL2DqY\",\r\n//     authDomain: \"quizdom-70da5.firebaseapp.com\",\r\n//     projectId: \"quizdom-70da5\",\r\n//     storageBucket: \"quizdom-70da5.appspot.com\",\r\n//     messagingSenderId: \"706147557425\",\r\n//     appId: \"1:706147557425:web:40f7062e5aee9a84743510\",\r\n//     measurementId: \"G-RE88729T4B\"\r\n//   };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBoWLYrLRwYfdk7-LSgNAcbLtDtG3gj0kQ\",\r\n  authDomain: \"quiz-1db0c.firebaseapp.com\",\r\n  projectId: \"quiz-1db0c\",\r\n  storageBucket: \"quiz-1db0c.appspot.com\",\r\n  messagingSenderId: \"78963595474\",\r\n  appId: \"1:78963595474:web:8d9d4f5b4ed293f52b350b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nfirebase.auth()\r\n\r\nexport default firebase;","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./LoadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1 className=\"blue\" style={{ fontSize: \"5rem\" }}>\r\n        <b>Quiz</b>\r\n      </h1>\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"audio\" /> */}\r\n      <Loader color=\"#29455a\" width={130} height={130} type=\"BallTriangle\" />\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Puff\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130} type=\"Bars\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Circles\" /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { StyledFirebaseAuth } from 'react-firebaseui'\r\nimport './Home.css'\r\nimport firebase from '../firebase/firebase'\r\nimport LoadingScreen from './LoadingScreen'\r\n\r\nconst Home = ({ setUser }) => {\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [path, setPath] = useState('')\r\n\tvar uiConfig = {\r\n\t\tsignInflow: 'popup',\r\n\t\tsignInOptions: [\r\n\t\t\tfirebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n\t\t\tfirebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n\t\t\tfirebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n\t\t],\r\n\t\tcallbacks: {\r\n\t\t\tsignInSuccessWithAuthResult: () => false,\r\n\t\t},\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tlet isMounted = true\r\n\t\tfirebase.auth().onAuthStateChanged(async user => {\r\n\t\t\t// setIsLoggedIn(!!user)\r\n\t\t\tif (user && isMounted) {\r\n\t\t\t\tconst res = await fetch('/API/users/login', {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tbody: JSON.stringify({ name: firebase.auth().currentUser.displayName }),\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\tconst body = await res.json()\r\n\t\t\t\tlocalStorage.setItem('username', firebase.auth().currentUser.displayName)\r\n\t\t\t\tlocalStorage.setItem('id', body.id)\r\n\t\t\t\tsetUser({\r\n\t\t\t\t\tuid: firebase.auth().currentUser.uid,\r\n\t\t\t\t\tname: firebase.auth().currentUser.displayName,\r\n\t\t\t\t\temail: firebase.auth().currentUser.email,\r\n\t\t\t\t})\r\n\t\t\t\tsetPath('/dashboard')\r\n\t\t\t} else {\r\n\t\t\t\tsetUser({})\r\n\t\t\t}\r\n\t\t\tif (isMounted) setLoading(false)\r\n\t\t})\r\n\t\treturn () => (isMounted = false)\r\n\t}, [setUser])\r\n\r\n\tif (!!path) {\r\n\t\treturn <Redirect push to={path} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='vertical-center' style={{ backgroundColor: '#294634' }}>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t) : (\r\n\t\t\t\t<div id='Home'>\r\n\t\t\t\t\t<div id='logo'>\r\n\t\t\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t\t\t<b>Create Al Haramain Games</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id='description'>\r\n\t\t\t\t\t\t\tNow create and join quiz at a single platform.You can create\r\n\t\t\t\t\t\t\ttrivia quizzes, personality test, polls and survays. Share out\r\n\t\t\t\t\t\t\tyour quiz with your students with a unique code.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id='login-card'>\r\n\t\t\t\t\t\t<label className='login-label'>\r\n\t\t\t\t\t\t\t<b>Q</b>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<StyledFirebaseAuth\r\n\t\t\t\t\t\t\tborderRadius='40px'\r\n\t\t\t\t\t\t\tuiConfig={uiConfig}\r\n\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Modal, Icon, IconButton } from '@material-ui/core'\r\nimport './AddQuestionModal.css'\r\nimport { DeleteRounded, EditRounded, SaveRounded } from '@material-ui/icons'\r\nimport { Row } from 'react-bootstrap'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t// margin: \"10px\",\r\n\t},\r\n\tmodal: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tpaper: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\toutline: 0,\r\n\t\twidth: '90%',\r\n\t\tborderRadius: '10px',\r\n\t},\r\n\tbuttons: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n}))\r\n\r\nexport default function AddQuestionModal({\r\n\ttype = 'add',\r\n\ttitle = '',\r\n\topType = 'radio',\r\n\topArray,\r\n\tindex = -1,\r\n\taddQuestionHandle,\r\n\teditQuestionHandle\r\n}) {\r\n\tconst classes = useStyles()\r\n\tconst [open, setOpen] = React.useState(false)\r\n\tconst [optionType, setOptionType] = useState('radio')\r\n\tconst [optionsArray, setOptionsArray] = useState([])\r\n\tconst [editedOption, setEditedOption] = useState(null)\r\n\tconst [editOpIndex, setEditOpIndex] = useState(-1)\r\n\tconst [titleField, setTitleField] = useState('')\r\n\tconst optionsRef = useRef(null)\r\n\tconst checkBoxRef = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (open) {\r\n\t\t\tsetTitleField(title)\r\n\t\t\tsetOptionType(opType)\r\n\t\t\tif (opArray) setOptionsArray(opArray)\r\n\t\t} else {\r\n\t\t\tsetTitleField('')\r\n\t\t\tsetOptionsArray([])\r\n\t\t\tsetOptionType('radio')\r\n\t\t}\r\n\t}, [open, title, opType, opArray])\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t}\r\n\tconst addQuestionCallBack = () => {\r\n\t\tconst tempArr = [...optionsArray]\r\n\t\tif (optionsRef.current.value.length !== 0) {\r\n\t\t\t// For radio options, set all other options incorrect\r\n\t\t\tif (optionType === 'radio' && checkBoxRef.current.checked)\r\n\t\t\t\ttempArr.forEach((op) => (op.isCorrect = false))\r\n\r\n\t\t\ttempArr.push({\r\n\t\t\t\ttext: optionsRef.current.value,\r\n\t\t\t\tisCorrect: checkBoxRef.current.checked,\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Error Handling\r\n\t\tif (!titleField.length && optionsArray.length < 2) {\r\n\t\t\talert('Please add Question and at least 2 options.')\r\n\t\t\treturn\r\n\t\t} else if (!titleField.length) {\r\n\t\t\talert('Please add Question.')\r\n\t\t\treturn\r\n\t\t} else if (optionsArray.length < 2) {\r\n\t\t\talert('Number of Options must be greater than 1.')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst correctOp = optionsArray.filter((op) => op.isCorrect)\r\n\t\tif (correctOp.length < 1) {\r\n\t\t\talert('No correct option was selected.')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (index !== -1) addQuestionHandle(titleField, optionType, tempArr, index)\r\n\t\telse addQuestionHandle(titleField, optionType, tempArr)\r\n\r\n\t\tsetOpen(false)\r\n\t}\r\n\r\n\tconst addOption = () => {\r\n\t\tif (optionsRef.current.value.length === 0) return\r\n\r\n\t\tconst arr = [...optionsArray]\r\n\t\tif (\r\n\t\t\toptionsArray.findIndex((op) => op.text === optionsRef.current.value) !==\r\n\t\t\t-1\r\n\t\t) {\r\n\t\t\talert('Option already exists.')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (optionType === 'radio' && checkBoxRef.current.checked)\r\n\t\t\t// For radio options, set all other options incorrect\r\n\t\t\tarr.forEach((op) => (op.isCorrect = false))\r\n\r\n\t\tarr.push({\r\n\t\t\ttext: optionsRef.current.value,\r\n\t\t\tisCorrect: checkBoxRef.current.checked,\r\n\t\t})\r\n\t\toptionsRef.current.value = ''\r\n\t\tcheckBoxRef.current.checked = false\r\n\t\tsetOptionsArray(arr)\r\n\t}\r\n\tconst handleTypeChange = (e) => setOptionType(e.target.value)\r\n\r\n\tconst deleteHandler = (ind) => {\r\n\t\tconst temp = [...optionsArray]\r\n\t\ttemp.splice(ind, 1)\r\n\t\tsetOptionsArray(temp)\r\n\t\tsetEditOpIndex(-1)\r\n\t}\r\n\r\n\tconst handleEdit = (ind) => {\r\n\t\tif (editOpIndex === -1) {\r\n\t\t\tsetEditOpIndex(ind)\r\n\t\t\tsetEditedOption(optionsArray[ind].text)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveEdited = () => {\r\n\t\tconst temp = [...optionsArray]\r\n\t\ttemp[editOpIndex].text = editedOption\r\n\t\tsetOptionsArray(temp)\r\n\t\tsetEditOpIndex(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{type === 'add' ? (\r\n\t\t\t\t<button className='button' onClick={handleOpen}>\r\n\t\t\t\t\tAdd Question\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<IconButton onClick={handleOpen}>\r\n\t\t\t\t\t<EditRounded />\r\n\t\t\t\t</IconButton>\r\n\t\t\t)}\r\n\t\t\t<Modal\r\n\t\t\t\taria-labelledby='transition-modal-title'\r\n\t\t\t\taria-describedby='transition-modal-description'\r\n\t\t\t\tclassName={classes.modal}\r\n\t\t\t\topen={open}\r\n\t\t\t\tdisableEnforceFocus={true}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<div className='questionCard'>\r\n\t\t\t\t\t\t\t<div id='title'>Question:</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tvalue={titleField}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setTitleField(e.target.value)}\r\n\t\t\t\t\t\t\t\tclassName='input-text question'\r\n\t\t\t\t\t\t\t\tplaceholder='Type Question Here'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tid='select'\r\n\t\t\t\t\t\t\t\tplaceholder='Select'\r\n\t\t\t\t\t\t\t\tonChange={handleTypeChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option className='selectOp' value='radio'>\r\n\t\t\t\t\t\t\t\t\tSingle Answer\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option className='selectOp' value='check'>\r\n\t\t\t\t\t\t\t\t\tMultiple Answers\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t\t<div className='option-div'>\r\n\t\t\t\t\t\t\t\t<div className='options' id='one-op'>\r\n\t\t\t\t\t\t\t\t\t{optionsArray.map((option, ind) => (\r\n\t\t\t\t\t\t\t\t\t\t<div className='option' key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype={optionType === 'radio' ? 'radio' : 'checkbox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='radio-in'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='option'\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.isCorrect}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{editOpIndex === ind ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={editedOption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEditedOption(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='add-op'>{option.text}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{editOpIndex === ind ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon className='save-icon' onClick={() => saveEdited()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SaveRounded />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='edit-icon'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEdit(ind)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditRounded />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='delete-icon'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteHandler(ind)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteRounded />\r\n\t\t\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='add-op'>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype={optionType === 'radio' ? 'radio' : 'checkbox'}\r\n\t\t\t\t\t\t\t\t\t\tref={checkBoxRef}\r\n\t\t\t\t\t\t\t\t\t\tclassName='radio-in'\r\n\t\t\t\t\t\t\t\t\t\tname='option'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tref={optionsRef}\r\n\t\t\t\t\t\t\t\t\t\tclassName='input-text op-text'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={`Option ${optionsArray.length + 1}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\tclassName='add-btn'\r\n\t\t\t\t\t\t\t\t\tvalue='+ Add'\r\n\t\t\t\t\t\t\t\t\tonClick={addOption}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ width: '200px' }}>\r\n\t\t\t\t\t\t\tAdd Picture\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t\t\t<button className='add-btn' onClick={handleClose}>\r\n\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t// disabled={!(optionsArray.length && titleField.length)}\r\n\t\t\t\t\t\t\tclassName='button'\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tonClick={e => addQuestionCallBack()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{type === 'add' ? 'Add ' : 'Edit '}\r\n\t\t\t\t\t\t\tQuestion\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport AddQuestionModal from \"./AddQuestionModal\";\r\n\r\nfunction createData(title, options, choice) {\r\n  return { title, options, choice };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Question\",\r\n  },\r\n  { id: \"options\", numeric: true, disablePadding: false, label: \"Options\" },\r\n  { id: \"choice\", numeric: true, disablePadding: false, label: \"Choice\" },\r\n  { id: \"edit\", numeric: true, disablePadding: false, label: \"Edit\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    selected,\r\n    setSelected,\r\n    questionArray,\r\n    setQuestionArray,\r\n  } = props;\r\n\r\n  const deleteRow = () => {\r\n    const temp = [...questionArray];\r\n    // Delete the selected rows from QuestionsArray\r\n    selected.forEach((element) => {\r\n      const target = temp.findIndex((e) => e.title === element);\r\n      temp.splice(target, 1);\r\n    });\r\n\r\n    setQuestionArray(temp);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          QUESTIONS\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n          <Delete />\r\n        </IconButton>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  questionArray: PropTypes.array,\r\n  setQuestionArray: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"95%\",\r\n    margin: \"5px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function QuestionsTable({ questionArray, setQuestionArray }) {\r\n  const rows = questionArray.map((question) =>\r\n    createData(question.title, question.options, question.optionType)\r\n  );\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const editQuestionHandle = (title, optionType, options, index) => {\r\n    const temp = [...questionArray];\r\n    temp[index] = { ...temp[index], title, optionType, options };\r\n    setQuestionArray(temp);\r\n  };\r\n\r\n  const rowsPerPage = 5;\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelects = rows.map((n) => n.title);\r\n      setSelected(newSelects);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  // \tsetRowsPerPage(parseInt(event.target.value, 10));\r\n  // \tsetPage(0);\r\n  // };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          questionArray={questionArray}\r\n          setQuestionArray={setQuestionArray}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.title);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.title}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, row.title)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.title}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.options.length}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.choice === \"radio\" ? \"Single\" : \"Multiple\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <AddQuestionModal\r\n                          key={index}\r\n                          type=\"edit\"\r\n                          title={row.title}\r\n                          opType={row.choice}\r\n                          opArray={row.options}\r\n                          index={index}\r\n                          addQuestionHandle={editQuestionHandle}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n        // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport * as io from 'socket.io-client';\r\nimport {\r\n\tMusicNote, MusicOff\r\n} from '@material-ui/icons'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport AttemptedModal from './AttemptedModal'\r\nimport './AttemptQuiz.css'\r\nimport { Icon } from '@material-ui/core'\r\n\r\nlet socket\r\nconst env = process.env.NODE_ENV;\r\nconst socketUrl = \"ws://localhost:3000\"\r\n\r\nclass AttemptQuiz extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tnumber: 0,\r\n\t\t\tquestions: [],\r\n\t\t\tattemptedQuestions: [],\r\n\t\t\tquizTitle: '',\r\n\t\t\tloading: true,\r\n\t\t\tresult: {},\r\n\t\t\tshowModal: false,\r\n\t\t\tpath: '',\r\n\t\t\tquizCode: '',\r\n\t\t\tscore: 0,\r\n\t\t\ttime: true,\r\n\t\t\tmark: 0,\r\n\t\t\tstudents: [],\r\n\t\t\tshowMark: false,\r\n\t\t\tmusic: true\r\n\t\t}\r\n\t\tthis.url = \"/Music.wav\";\r\n\t\tthis.audio = new Audio(this.url);\r\n\t\tthis.audio.play()\r\n\t\tthis.audio.addEventListener('ended', function () {\r\n\t\t\tthis.audio.play()\r\n\t\t}, false);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst quizCode = this.props.match.params.quizCode\r\n\t\tconst res = await fetch('/API/quizzes/join', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({ quizId: quizCode }),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t})\r\n\t\tconst quizData = await res.json()\r\n\t\tif (!!quizData.error) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tquizTitle: quizData.error,\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsocket = io.connect(socketUrl)\r\n\t\t\tconst username = localStorage.getItem('username')\r\n\t\t\tsocket.emit('login', { username, quizCode })\r\n\t\t\tsocket.on('mark', students => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstudents\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tconst temp = quizData.questions.map((question) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: question.id,\r\n\t\t\t\t\ttitle: question.title,\r\n\t\t\t\t\toptionType: question.optionType,\r\n\t\t\t\t\tselectedOptions: [],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\tquizTitle: quizData.title,\r\n\t\t\t\tquestions: quizData.questions,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tattemptedQuestions: temp,\r\n\t\t\t\tquizCode\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tsocket.close()\r\n\t\tthis.audio.pause()\r\n\t}\r\n\thandleOptionSelect = (option, number) => {\r\n\t\tconst { attemptedQuestions, questions } = this.state\r\n\t\tconst temp = [...attemptedQuestions]\r\n\t\tlet options;\r\n\t\tif (temp.length >= number - 1) {\r\n\t\t\toptions = temp[number].selectedOptions\r\n\t\t}\r\n\t\telse {\r\n\t\t\toptions = []\r\n\t\t}\r\n\t\tif (attemptedQuestions[number].optionType === 'radio') options[0] = option\r\n\t\telse {\r\n\t\t\tif (options.find(opt => opt === option)) {\r\n\t\t\t\toptions.splice(options.findIndex(opt => opt === option), 1)\r\n\t\t\t} else {\r\n\t\t\t\toptions.push(option)\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp[number].selectedOptions = options\r\n\t\tlet score = this.getMark(temp, number)\r\n\t\tif (attemptedQuestions[number].optionType === 'radio') {\r\n\t\t\tlet currentScore = this.evaluateQuiz(questions, temp)\r\n\t\t\tsocket.emit('mark', { id: localStorage.getItem('id'), currentScore })\r\n\t\t\tthis.setState({\r\n\t\t\t\tattemptedQuestions: temp,\r\n\t\t\t\ttime: number < questions.length - 1,\r\n\t\t\t\tmark: score === 1 ? 1 : 2,\r\n\t\t\t\tshowMark: true,\r\n\t\t\t\tscore: currentScore\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => this.increaseNumber(), 1500)\r\n\t\t} else if (attemptedQuestions[number].optionType === 'check') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tattemptedQuestions: [...temp]\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tgetMark = (attemptedQuestions, number) => {\r\n\t\tconst { questions } = this.state\r\n\t\tconst correctOptions = questions[number].options.filter((op) => op.isCorrect)\r\n\t\tlet question = questions[number]\r\n\t\tlet mark\r\n\t\t// Error for Quiz with no correct answers\r\n\t\tif (correctOptions.length < 1) return 0\r\n\t\tconst weightage = 1 / correctOptions.length\r\n\t\tlet qScore = 0\r\n\t\tif (correctOptions.length < attemptedQuestions[number].selectedOptions.length) {\r\n\t\t\tqScore -=\r\n\t\t\t\t(question.selectedOptions.length - correctOptions.length) * weightage\r\n\t\t}\r\n\t\tattemptedQuestions[number].selectedOptions.forEach((selectedOp) => {\r\n\t\t\tconst correct = correctOptions.find((op) => op.text === selectedOp)\r\n\t\t\tif (correct !== undefined) qScore += weightage\r\n\t\t})\r\n\t\treturn (qScore < 1 ? 0 : 1)\r\n\t}\r\n\r\n\tcheckNext = () => {\r\n\t\tconst { attemptedQuestions, questions, number } = this.state\r\n\t\tlet score = this.getMark(attemptedQuestions, number)\r\n\t\tif (attemptedQuestions[number].optionType === 'check') {\r\n\t\t\tlet currentScore = this.evaluateQuiz(questions, attemptedQuestions)\r\n\t\t\tsocket.emit('mark', { id: localStorage.getItem('id'), currentScore })\r\n\t\t\tthis.setState({\r\n\t\t\t\tmark: score === 1 ? 1 : 2,\r\n\t\t\t\tshowMark: true,\r\n\t\t\t\tscore: currentScore\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => this.increaseNumber(), 1500)\r\n\t\t}\r\n\t}\r\n\r\n\tincreaseNumber = () => {\r\n\t\tconst { number, questions, attemptedQuestions } = this.state\r\n\t\tif (number < questions.length - 1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnumber: number + 1,\r\n\t\t\t\tshowMark: false,\r\n\t\t\t\tmark: 0\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: true,\r\n\t\t\t\tresult: this.evaluateQuiz(questions, attemptedQuestions),\r\n\t\t\t\tshowMark: false\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => this.increaseNumber(), 1500)\r\n\t\t}\r\n\t}\r\n\tsubmitQuiz = async () => {\r\n\t\t// send attempted Questions to backend\r\n\t\tconst { quizCode, attemptedQuestions } = this.state\r\n\t\ttry {\r\n\t\t\tconst { questions, attemptedQuestions, number } = this.state\r\n\t\t\tconst score = this.evaluateQuiz(questions, attemptedQuestions)\r\n\t\t\tthis.setState({\r\n\t\t\t\tscore\r\n\t\t\t})\r\n\t\t\t// const res = await fetch('/API/quizzes/submit', {\r\n\t\t\t// \tmethod: 'POST',\r\n\t\t\t// \tbody: JSON.stringify({\r\n\t\t\t// \t\tquizId: quizCode,\r\n\t\t\t// \t\tquestions: attemptedQuestions,\r\n\t\t\t// \t}),\r\n\t\t\t// \theaders: {\r\n\t\t\t// \t\t'Content-Type': 'application/json',\r\n\t\t\t// \t},\r\n\t\t\t// })\r\n\t\t\t// const body = await res.json()\r\n\t\t\tconst realQues = questions[number]\r\n\t\t\tconst correctOptions = realQues.options.filter((op) => op.isCorrect)\r\n\t\t\tlet question = questions[number]\r\n\t\t\tlet mark\r\n\t\t\t// Error for Quiz with no correct answers\r\n\t\t\tif (correctOptions.length < 1) return 0\r\n\t\t\tconst weightage = 1 / correctOptions.length\r\n\t\t\tlet qScore = 0\r\n\t\t\tif (correctOptions.length < attemptedQuestions[number].selectedOptions.length) {\r\n\t\t\t\tqScore -=\r\n\t\t\t\t\t(question.selectedOptions.length - correctOptions.length) * weightage\r\n\t\t\t}\r\n\t\t\tattemptedQuestions[number].selectedOptions.forEach((selectedOp) => {\r\n\t\t\t\tconst correct = correctOptions.find((op) => op.text === selectedOp)\r\n\t\t\t\tif (correct !== undefined) qScore += weightage\r\n\t\t\t})\r\n\r\n\t\t\tif (qScore < 1) {\r\n\t\t\t\tmark = 2\r\n\t\t\t} else {\r\n\t\t\t\tmark = 1\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t// result: body,\r\n\t\t\t\tshowModal: true,\r\n\t\t\t\ttime: false,\r\n\t\t\t\tmark\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Error Submitting quiz', e)\r\n\t\t}\r\n\t}\r\n\tevaluateQuiz = (quizQuestions, attemptedQuestions) => {\r\n\t\tlet score = 0\r\n\t\tattemptedQuestions.forEach((question) => {\r\n\t\t\tconst realQues = quizQuestions.find((x) => x.id === question.id)\r\n\t\t\tconst correctOptions = realQues.options.filter((op) => op.isCorrect)\r\n\t\t\t// Error for Quiz with no correct answers\r\n\t\t\tif (correctOptions.length < 1) return 0\r\n\r\n\t\t\tconst attemptedOptions = question.selectedOptions\r\n\t\t\tif (realQues.optionType === 'check') {\r\n\t\t\t\tlet cnt = 0\r\n\t\t\t\tfor (let i = 0; i < attemptedOptions.length; ++i) {\r\n\t\t\t\t\tif (correctOptions.find(opt => opt.text == attemptedOptions[i])) {\r\n\t\t\t\t\t\t++cnt\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (cnt === correctOptions.length) {\r\n\t\t\t\t\t++score\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (realQues.optionType === 'radio') {\r\n\t\t\t\tif (correctOptions[0].text === attemptedOptions[0]) {\r\n\t\t\t\t\t++score\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn score.toFixed(0)\r\n\t}\r\n\thideModal = () => {\r\n\t\tthis.setState({ showModal: false, mark: 0, number: this.state.number + 1 })\r\n\t}\r\n\thandleMusic = () => {\r\n\t\tconst { music } = this.state\r\n\t\tmusic ? this.audio.pause() : this.audio.play()\r\n\t\tthis.setState({ music: !music })\r\n\t}\r\n\r\n\trender = () => {\r\n\t\tconst { number, questions, attemptedQuestions, quizTitle, loading, result, path, showModal, score, time, mark, students, showMark, music } = this.state\r\n\t\tconst { handleOptionSelect, submitQuiz, increaseNumber, hideModal, checkNext } = this\r\n\t\tconst { quizCode } = this.props.match.params\r\n\t\tif (loading) return <LoadingScreen />\r\n\t\t// For Quiz not Found\r\n\t\tif (quizTitle === 'ERR:QUIZ_NOT_FOUND')\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loading'>\r\n\t\t\t\t\t<h1>404 Quiz Not Found!</h1>\r\n\t\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\tif (!!path) {\r\n\t\t\treturn <Redirect push to={`/attempt-quiz/${quizCode}/${path}`} />\r\n\t\t}\r\n\t\t// For Quiz not accessible\r\n\t\telse if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED')\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loading'>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tQuiz Access is Not Granted by the Creator. Please contact Quiz\r\n\t\t\t\t\t\tCreator.\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\telse if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED')\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loading'>\r\n\t\t\t\t\t<h2>You have already taken the Quiz.</h2>\r\n\t\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\telse {\r\n\t\t\tlet question = questions[number], options = attemptedQuestions.length > number ? attemptedQuestions[number].selectedOptions : []\r\n\t\t\tconsole.log('students:', students)\r\n\t\t\treturn (\r\n\t\t\t\t<div id='main-body' className='flex-container grow'>\r\n\t\t\t\t\t<div className='flex-horizontal-container grow'>\r\n\t\t\t\t\t\t<div id='create-quiz-body' className='flex-container grow' style={{ flexGrow: '1', marginTop: '100px', marginBottom: '50px' }}>\r\n\t\t\t\t\t\t\t<div className='attemptQuestionCard theme-classic flex-container grow' style={{ backgroundColor: '#294634' }}>\r\n\t\t\t\t\t\t\t\t<div className='fixed' style={{ height: '60px', display: 'flex', justifyContent: 'space-between', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t<div className='topText'>Quiz {number + 1}/{questions.length}</div>\r\n\t\t\t\t\t\t\t\t\t<Icon onClick={e => this.handleMusic()} style={{ height: '60px' }}>\r\n\t\t\t\t\t\t\t\t\t\t{music ? <MusicNote fontSize='large' /> : <MusicOff fontSize='large' />}\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t\t<div className='topText'>Score:{score}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='grow vertical-center puzzle-text'>\r\n\t\t\t\t\t\t\t\t\t{question.title}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmark === 0 ? <div className='option-div options-grid grow' style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, ind) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\t\t`option is-mcq myoption-text is-selected option-pressed `\r\n\t\t\t\t\t\t\t\t\t\t\t} style={{ width: '100%' }} key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='option-inner vertical-center puzzle-text option-pressed is-selected theme-option-container'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`option${number}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={options.findIndex(opt => opt === option.text) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(option.text, number)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.optionType === 'check' && <span className={\"select-icon-wrapper flex-view all-center is-selected\" + (options.findIndex(opt => opt === option.text) >= 0 ? \" pink-background option-selected\" : '')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"icon\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div> : <div className='option-div options-grid grow' style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, ind) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={'option is-mcq myoption-text is-selected option-pressed ' + (option.isCorrect ? `right-color ` : '') + ((option.isCorrect === false && options.findIndex(opt => opt === option.text) >= 0) ? 'wrong-color ' : '')} style={{ width: '100%' }} key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(option.isCorrect || options.findIndex(opt => opt === option.text) >= 0) && <div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='option-inner vertical-center puzzle-text option-pressed is-selected theme-option-container'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`option${number}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={options.findIndex(opt => opt === option.text) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(option.text, number)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.optionType === 'check' && <span className={\"select-icon-wrapper flex-view all-center is-selected \" + (options.findIndex(opt => opt === option.text) >= 0 ? \"pink-background\" : '')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={\"icon \" + (options.findIndex(opt => opt === option.text) >= 0 ? \"option-selected\" : '')}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className='fixed' style={{ height: '70px' }}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tnumber === questions.length - 1 && question.optionType === 'check' && <button className='button wd-200' onClick={e => checkNext()}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tquestion.optionType === 'check' && number < questions.length - 1 && <button className='button wd-200' onClick={e => checkNext()}>\r\n\t\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmark === 1 ? <div className='fixed mycorrect-answer vertical-center puzzle-text'>\r\n\t\t\t\t\t\t\t\t\t\tCorrect\r\n\t\t\t\t\t\t\t\t\t</div> : (mark == 2 ? <div className='fixed mywrong-answer vertical-center puzzle-text'>\r\n\t\t\t\t\t\t\t\t\t\tWrong\r\n\t\t\t\t\t\t\t\t\t</div> : '')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<AttemptedModal result={result} totalScore={questions.length} showModal={showModal} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='grow' style={{ flexGrow: '0', width: '280px', marginTop: '110px', overflow: 'visible', height: `${window.innerHeight - 170}` }}>\r\n\t\t\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstudents.map((std, index) => <ListGroup.Item style={{ display: 'flex', justifyContent: 'space-between' }} variant={std.id === socket.id ? 'primary' : 'secondary'}>{`${index + 1}.${(std.name.length < 15) ? std.name : (std.name.substr(0, 12) + '...')}`}<Badge pill bg=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t{std.mark}\r\n\t\t\t\t\t\t\t\t\t</Badge></ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div >\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AttemptQuiz","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Row } from 'react-bootstrap'\r\nimport './CreateQuiz.css'\r\nimport AddQuestionModal from '../components/AddQuestionModal'\r\nimport QuestionsTable from '../components/QuestionsTable'\r\nimport { Switch } from '@material-ui/core'\r\nimport LoadingScreen from './LoadingScreen'\r\n\r\nconst CreateQuiz = ({\r\n\tuser,\r\n\tquizTitle,\r\n\tquestions,\r\n\tisOpen,\r\n\teditQuizHandle,\r\n\tshowToast\r\n}) => {\r\n\tconst [questionArray, setQuestionArray] = useState([])\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [access, setAccess] = useState(true)\r\n\tconst [loading, setLoading] = useState('stop')\r\n\tconst [quizCode, setQuizCode] = useState(null)\r\n\r\n\tconst addQuestionHandle = (title, optionType, options) => {\r\n\t\tconst arr = [...questionArray]\r\n\t\tarr.push({ title, optionType, options })\r\n\t\tsetQuestionArray(arr)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (quizTitle) {\r\n\t\t\tsetTitle(quizTitle)\r\n\t\t\tsetQuestionArray(questions)\r\n\t\t\tsetAccess(isOpen)\r\n\t\t}\r\n\t}, [quizTitle, questions, isOpen])\r\n\r\n\tconst createQuiz = async () => {\r\n\t\tif (!(title.length || questionArray.length)) {\r\n\t\t\talert('Please add title and questions.')\r\n\t\t\treturn\r\n\t\t} else if (!title.length) {\r\n\t\t\talert('Please add Quiz title.')\r\n\t\t\treturn\r\n\t\t} else if (!questionArray.length) {\r\n\t\t\talert('Please add any questions.')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetLoading('start')\r\n\t\ttry {\r\n\t\t\tconst result = await fetch('/API/quizzes/create', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\tquestions: questionArray,\r\n\t\t\t\t\tisOpen: access\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst body = await result.json()\r\n\t\t\tsetQuizCode(body.quizId)\r\n\t\t\tshowToast('Create Quiz', 'Success')\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading('error')\r\n\t\t}\r\n\t}\r\n\tif (quizCode) return <Redirect push to={`/created-successfully/${quizCode}`} />\r\n\r\n\tif (loading === 'start') return <LoadingScreen />\r\n\r\n\treturn (\r\n\t\t<div id='main-body'>\r\n\t\t\t<div id='create-quiz-body'>\r\n\t\t\t\t<div className='quiz-header'>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='input-text'\r\n\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\tid='quiz-title'\r\n\t\t\t\t\t\t\tplaceholder='Untitled Quiz'\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tautocomplete='off'\r\n\t\t\t\t\t\t\tstyle={{ width: '50%' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div style={{ width: '100px' }}>Subject</div>\r\n\t\t\t\t\t\t<select style={{ width: '100px' }}>\r\n\t\t\t\t\t\t\t<option>Qur'an</option>\r\n\t\t\t\t\t\t\t<option>Arabic</option>\r\n\t\t\t\t\t\t\t<option>Islamic Studies</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={access}\r\n\t\t\t\t\t\t\tonChange={(e) => setAccess(e.target.checked)}\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tname='access'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='controls'>\r\n\t\t\t\t\t<AddQuestionModal addQuestionHandle={addQuestionHandle} />\r\n\t\t\t\t\t<div className='switch'>\r\n\t\t\t\t\t\t<h4>{access ? 'Public' : 'Private'}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='questionTable'>\r\n\t\t\t\t<QuestionsTable\r\n\t\t\t\t\tquestionArray={questionArray}\r\n\t\t\t\t\tsetQuestionArray={setQuestionArray}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{quizTitle && (\r\n\t\t\t\t\t<button className='add-btn' onClick={() => editQuizHandle()}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t<button\r\n\t\t\t\t\t// disabled={!(title.length && questionArray.length)}\r\n\t\t\t\t\tclassName='button wd-200'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (quizTitle) editQuizHandle(title, questionArray, access)\r\n\t\t\t\t\t\telse createQuiz()\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{quizTitle ? 'Save ' : 'Create '}\r\n\t\t\t\t\tQuiz\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CreateQuiz\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './JoinQuiz.css'\r\n\r\n\r\nconst JoinQuiz = () => {\r\n\tconst [valid, setValid] = useState('false')\r\n\tconst [code, setCode] = useState('')\r\n\tconst [modal, setModal] = useState(localStorage.getItem('username') != undefined)\r\n\r\n\tconst handleJoinQuiz = () => {\r\n\t\tif (code.length) setValid('attempt-quiz')\r\n\t}\r\n\tif (localStorage.getItem('username') == undefined) {\r\n\t\treturn <Redirect to='/name' />\r\n\t}\r\n\tif (valid !== 'false') return <Redirect push to={`/${valid}/${code}/0`} />\r\n\t// if (valid === 'join-blind')\r\n\t// \treturn <Redirect push to={`attempt-blind-quiz/${code}`} />\r\n\r\n\treturn (\r\n\t\t<div id='join-quiz'>\r\n\t\t\t<div id='join-quiz-div'>\r\n\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t<b style={{ fontweight: 600 }}>Quiz</b>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={code}\r\n\t\t\t\t\tonChange={(e) => setCode(e.target.value)}\r\n\t\t\t\t\tid='q-code'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Enter Quiz Code'\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tonKeyPress={(event) => {\r\n\t\t\t\t\t\tif (event.key === 'Enter') handleJoinQuiz()\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='button wd-200' onClick={handleJoinQuiz}>\r\n\t\t\t\t\tJoin Quiz\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default JoinQuiz\r\n","import React from \"react\"\r\nimport { IconButton } from '@material-ui/core'\r\nimport { EditRounded, DeleteRounded } from '@material-ui/icons'\r\nimport \"./QuizCard.css\"\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nconst CreatedQuizCard = ({\r\n\ttitle,\r\n\tcode,\r\n\tquestions,\r\n\tisOpen,\r\n\tindex,\r\n\tsetEditQuiz,\r\n\tdeleteQuiz\r\n}) => <Card style={{ width: '18rem' }} className=\"m-4\">\r\n\t\t<Card.Img variant=\"top\" src=\"/Quiz/download.jpg\" />\r\n\t\t<Card.Body className=\"myCard\">\r\n\t\t\t<Card.Title>{title.length < 15 ? title : title.substr(0, 12) + '...'}({questions})</Card.Title>\r\n\t\t\t<ListGroup className=\"myCard\">\r\n\t\t\t\t<ListGroupItem className=\"myCard\">{code}</ListGroupItem>\r\n\t\t\t\t<ListGroupItem className=\"myCard\">{isOpen ? 'Opened' : 'Not Opened'}</ListGroupItem>\r\n\t\t\t\t<ListGroupItem className=\"myCard\">\r\n\t\t\t\t\t<IconButton onClick={() => setEditQuiz([index])}>\r\n\t\t\t\t\t\t<EditRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => deleteQuiz(index)}>\r\n\t\t\t\t\t\t<DeleteRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t</ListGroup>\r\n\t\t</Card.Body>\r\n\t</Card>\r\n\r\nexport default CreatedQuizCard\r\n","import React from \"react\"\r\nimport \"./QuizCard.css\"\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\n\r\nconst JoinedQuizCard = ({ title, questions, id, joinQuiz }) => {\r\n\treturn <Card style={{ width: '18rem' }} className=\"m-4\">\r\n\t\t<Card.Img variant=\"top\" src=\"/Quiz/download.jpg\" />\r\n\t\t<Card.Body className=\"myCard\">\r\n\t\t\t<Card.Title>{title.length < 15 ? title : title.substr(0, 12) + '...'}({questions})</Card.Title>\r\n\t\t</Card.Body>\r\n\t\t<ListGroup className=\"myCard list-group-flush\">\r\n\t\t\t<ListGroupItem className=\"myCard\">{id}</ListGroupItem>\r\n\t\t\t<ListGroupItem className=\"myCard\"><Button variant=\"success\" onClick={e => joinQuiz(id)} style={{ height: '38px', width: '100%' }}>Join</Button></ListGroupItem>\r\n\t\t</ListGroup>\r\n\t</Card>\r\n}\r\n\r\nexport default JoinedQuizCard","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './UserDashBoard.css'\r\nimport CreatedQuizCard from '../components/CreatedQuizCard'\r\nimport JoinedQuizCard from '../components/JoinedQuizCard'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport CreateQuiz from './CreateQuiz'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport firebase from '../firebase/firebase'\r\n\r\nconst UserDashboard = ({ user }) => {\r\n\tconst [createdQuizzes, setCreatedQuizzes] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [editQuiz, setEditQuiz] = useState([])\r\n\tconst [allQuizzes, setAllQuizzes] = useState([])\r\n\tconst [path, setPath] = useState('')\r\n\t// Fetch Data from the API\r\n\tuseEffect(() => {\r\n\t\t// if (!user.uid) {\r\n\t\t// \tsetLoading(false)\r\n\t\t// \treturn\r\n\t\t// }\r\n\t\tconst fetchQuizData = async () => {\r\n\t\t\tlet results, quizData\r\n\t\t\tif (user.uid) {\r\n\t\t\t\tresults = await fetch(`/API/users/${user.uid}`)\r\n\t\t\t\tquizData = await results.json()\r\n\t\t\t\tif (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz)\r\n\t\t\t}\r\n\t\t\tresults = await fetch(`/API/quizzes`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tquizData = await results.json()\r\n\t\t\tif (quizData.quizData) {\r\n\t\t\t\tsetAllQuizzes(quizData.quizData)\r\n\t\t\t}\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t\tfetchQuizData()\r\n\t}, [user])\r\n\r\n\tconst editQuizHandle = async (title, questions, isOpen) => {\r\n\t\tif (!title) setEditQuiz([])\r\n\t\telse {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconsole.dir({\r\n\t\t\t\tquizId: createdQuizzes[editQuiz]._id,\r\n\t\t\t\tuid: user.uid,\r\n\t\t\t\ttitle,\r\n\t\t\t\tquestions,\r\n\t\t\t\tisOpen,\r\n\t\t\t})\r\n\t\t\tconst results = await fetch('/API/quizzes/edit', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tquizId: createdQuizzes[editQuiz]._id,\r\n\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tquestions,\r\n\t\t\t\t\tisOpen,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\tconst submitData = await results.json()\r\n\t\t\tconsole.dir(submitData)\r\n\t\t\tconst temp = [...createdQuizzes]\r\n\t\t\ttemp[editQuiz[0]].title = title\r\n\t\t\ttemp[editQuiz[0]].questions = questions\r\n\t\t\ttemp[editQuiz[0]].isOpen = isOpen\r\n\t\t\tsetCreatedQuizzes(temp)\r\n\t\t\tsetEditQuiz([])\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteQuiz = async index => {\r\n\t\tsetLoading(true)\r\n\t\tconst results = await fetch(`/API/quizzes/${createdQuizzes[index]._id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t})\r\n\t\tconst submitData = await results.json()\r\n\t\tconsole.dir(submitData)\r\n\t\tconst temp = [...createdQuizzes]\r\n\t\ttemp.splice(index, 1)\r\n\t\tsetCreatedQuizzes(temp)\r\n\t\tsetEditQuiz([])\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tif (loading) return <LoadingScreen />\r\n\r\n\tif (path) {\r\n\t\treturn localStorage.getItem('username') == undefined ? <Redirect push to='join-quiz' /> : <Redirect push to={`/attempt-quiz/${path}`} />\r\n\t}\r\n\r\n\tif (editQuiz.length)\r\n\t\treturn (\r\n\t\t\t<CreateQuiz\r\n\t\t\t\tuser={user}\r\n\t\t\t\tquizTitle={createdQuizzes[editQuiz].title}\r\n\t\t\t\tquestions={createdQuizzes[editQuiz].questions}\r\n\t\t\t\tisOpen={createdQuizzes[editQuiz].isOpen}\r\n\t\t\t\teditQuizHandle={editQuizHandle}\r\n\t\t\t/>\r\n\t\t)\r\n\r\n\treturn (\r\n\t\t<div className='dash-body'>\r\n\t\t\t<div className='quizzes'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Carousel style={{ height: '100%' }}>\r\n\t\t\t\t\t\t<Carousel.Item interval={4000}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"d-block w-100\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: `100%`, height: `auto` }}\r\n\t\t\t\t\t\t\t\tsrc=\"/Quiz/dashboard/dashboard-1.jpg\"\r\n\t\t\t\t\t\t\t\talt=\"First slide\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Carousel.Caption>\r\n\t\t\t\t\t\t\t\t<h3>First Slide</h3>\r\n\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n\t\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t<Carousel.Item interval={4000}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: `100%`, height: `auto` }}\r\n\t\t\t\t\t\t\t\tsrc=\"/Quiz/dashboard/dashboard-2.jpg\"\r\n\t\t\t\t\t\t\t\talt=\"Second slide\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Carousel.Caption>\r\n\t\t\t\t\t\t\t\t<h3>Second slide label</h3>\r\n\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n\t\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t<Carousel.Item interval={4000}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: `100%`, height: `auto` }}\r\n\t\t\t\t\t\t\t\tsrc=\"/Quiz/dashboard/dashboard-3.jpg\"\r\n\t\t\t\t\t\t\t\talt=\"Third slide\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Carousel.Caption>\r\n\t\t\t\t\t\t\t\t<h3>Third slide label</h3>\r\n\t\t\t\t\t\t\t\t<p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n\t\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t<div className='card-holder' style={{ justifyContent: 'center' }}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tallQuizzes.map((quiz, key) => (\r\n\t\t\t\t\t\t\t\t<JoinedQuizCard\r\n\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\ttitle={quiz.title}\r\n\t\t\t\t\t\t\t\t\t// score={quiz.responses[0].score}\r\n\t\t\t\t\t\t\t\t\tquestions={quiz.questions.length}\r\n\t\t\t\t\t\t\t\t\tid={quiz._id}\r\n\t\t\t\t\t\t\t\t\tjoinQuiz={setPath}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserDashboard\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './CreatedSuccessfully.css'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nconst CreatedSuccessfully = ({ match }) => {\r\n\tconst [Copy, setCopy] = useState('copy')\r\n\treturn (\r\n\t\t<div id='created-quiz'>\r\n\t\t\t<div id='created-quiz-div'>\r\n\t\t\t\t<div id='message'>\r\n\t\t\t\t\t<h2 className='b'>Quiz Created Successfully!</h2>\r\n\t\t\t\t\t<p>Share the following code with your students</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\t// className='input-text'\r\n\t\t\t\t\tid={Copy}\r\n\t\t\t\t\tvalue={match.params.quizCode}\r\n\t\t\t\t\tdisabled={true}\r\n\t\t\t\t// onChange={(e) => {}}\r\n\t\t\t\t/>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={match.params.quizCode}\r\n\t\t\t\t\tonCopy={() => {\r\n\t\t\t\t\t\tsetCopy('copied')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button className='button wd-200'>\r\n\t\t\t\t\t\t{Copy === 'copy' ? 'Copy Code' : 'Code Copied!'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t<Link to={'/dashboard'}>\r\n\t\t\t\t\t<button className='button wd-200'>Dashboard</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default CreatedSuccessfully\r\n","import { Link } from \"react-router-dom\"\r\nimport React from \"react\"\r\n\r\nconst NotFoundPage = () => {\r\n\treturn (\r\n\t\t<div className=\"loading\">\r\n\t\t\t<h1>404 Page Not Found!</h1>\r\n\t\t\t<div id=\"logo-name\">\r\n\t\t\t\t<b>Quiz</b>\r\n\t\t\t</div>\r\n\t\t\t<h3>\r\n\t\t\t\tWho told you to mess up with the URL? <Link to=\"/\">Click here</Link> and\r\n\t\t\t\tGo back to the Dashboard.\r\n\t\t\t</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Modal } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t// margin: \"10px\",\r\n\t},\r\n\tmodal: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\tpaper: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(10, 10),\r\n\t\tborderRadius: \"20px\",\r\n\t\t// display:\"flex\",\r\n\t\t// alignItems:\"center\",\r\n\t},\r\n\tbuttons: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n}))\r\n\r\nconst AttemptedModal = ({ result, totalScore, showModal }) => {\r\n\tconst classes = useStyles()\r\n\tconst [open, setOpen] = useState(showModal)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetOpen(showModal)\r\n\t}, [showModal])\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Modal\r\n\t\t\t\taria-labelledby=\"transition-modal-title\"\r\n\t\t\t\taria-describedby=\"transition-modal-description\"\r\n\t\t\t\tclassName={classes.modal}\r\n\t\t\t\topen={open}\r\n\t\t\t\tdisableEnforceFocus={true}\r\n\t\t\t>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<h2>Quiz Attempted Successfully.</h2>\r\n\t\t\t\t\t<h1 className=\"score_h2\">\r\n\t\t\t\t\t\t{result.error\r\n\t\t\t\t\t\t\t? \"Not Submitted ! \"\r\n\t\t\t\t\t\t\t: `Score: ${result}/${totalScore}`}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div id='row'>\r\n\t\t\t\t\t\t<Link to={\"/dashboard\"}>\r\n\t\t\t\t\t\t\t<button className=\"button wd-200\">Dashboard</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<button className=\"button wd-200\" onClick={() => setOpen(false)}>Return</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AttemptedModal\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Icon } from '@material-ui/core'\r\nimport './Sidebar.css'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport {\r\n\tCreateNewFolder,\r\n\tDashboard,\r\n\tExitToApp,\r\n\tMeetingRoom,\r\n\tMenuOpenRounded,\r\n\tMenuRounded,\r\n} from '@material-ui/icons'\r\n\r\nfunction Sidebar({ setUsername, setPath }) {\r\n\tconst [signOut, setSignOut] = useState(false)\r\n\tconst SidedbarData = [\r\n\t\t{\r\n\t\t\ttitle: 'Dashboard',\r\n\t\t\tpath: '/dashboard',\r\n\t\t\ticon: <Dashboard />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Join Quiz',\r\n\t\t\tpath: '/join-quiz',\r\n\t\t\ticon: <MeetingRoom />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Create Quiz',\r\n\t\t\tpath: '/create-quiz',\r\n\t\t\ticon: <CreateNewFolder />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t]\r\n\tconst [sidebar, setSidebar] = useState(false)\r\n\tconst showSidebar = () => setSidebar(!sidebar)\r\n\tif (signOut) {\r\n\t\tif (!!firebase.auth().currentUser) {\r\n\t\t\tfirebase.auth().signOut()\r\n\t\t}\r\n\t\tlocalStorage.removeItem('username')\r\n\t\tlocalStorage.removeItem('id')\r\n\t\tsetUsername('')\r\n\t\treturn <Redirect to='/' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Icon className='menu-bars' onClick={e => showSidebar()}>\r\n\t\t\t\t<MenuRounded />\r\n\t\t\t</Icon>\r\n\t\t\t<nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n\t\t\t\t<ul className='nav-menu-items' onClick={e => showSidebar()}>\r\n\t\t\t\t\t<li className='navbar-toggle'>\r\n\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t<MenuOpenRounded fontSize='large' />\r\n\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{SidedbarData.map((item, index) => {\r\n\t\t\t\t\t\treturn (index < 2 || !!firebase.auth().currentUser) && (\r\n\t\t\t\t\t\t\t<li key={index} className='nav-text'>\r\n\t\t\t\t\t\t\t\t<Link to={item.path}>\r\n\t\t\t\t\t\t\t\t\t<Icon style={{ height: '40px' }}>{item.icon}</Icon>\r\n\t\t\t\t\t\t\t\t\t<span className='nav-item-title'>{item.title}</span>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{/* Sign Out Button */}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(!!firebase.auth().currentUser || !!localStorage.getItem('username')) && <li className='nav-text sign-out' style={{ display: 'flex', justifyContent: 'left' }}>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => setSignOut(true)}>\r\n\t\t\t\t\t\t\t\t<Icon style={{ height: '40px' }}\t>\r\n\t\t\t\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t<span className='nav-item-title'>{'SignOut'}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Sidebar\r\n/*\r\nif (!!(firebase.auth().currentUser) || index === 1)\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={index} className='nav-text'>\r\n\t\t\t\t\t\t\t\t\t<Link to={item.path}>\r\n\t\t\t\t\t\t\t\t\t\t<Icon>{item.icon}</Icon>\r\n\t\t\t\t\t\t\t\t\t\t<span className='nav-item-title'>{item.title}</span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n*/","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon } from '@material-ui/core'\r\nimport { AccountCircle } from '@material-ui/icons'\r\nimport './AppBar.css'\r\nimport Sidebar from './Sidebar'\r\nimport firebase from '../firebase/firebase'\r\nconst AppBar = ({ user, setUser, setUsername }) => {\r\n\tconst username = localStorage.getItem('username')\r\n\treturn (\r\n\t\t<div className='appBar'>\r\n\t\t\t<div className='slider'>\r\n\t\t\t\t<Sidebar setUsername={setUsername} />\r\n\t\t\t\t<Link to='/' className='home'>\r\n\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div className='appBar-user' style={{ marginRight: '80px' }}>\r\n\t\t\t\t<div id='row' style={{ height: '100%' }}>\r\n\t\t\t\t\t{!firebase.auth().currentUser && <Link to='/admin' className='admin vertical-center'>\r\n\t\t\t\t\t\t<b>Admin</b>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{!!username && <div style={{ marginRight: '10px', paddingTop: '10px' }}>\r\n\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t<AccountCircle />\r\n\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t\t<div className='vertical-center'>\r\n\t\t\t\t\t\t<div>{username}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AppBar\r\n","import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: '#d81e5b',\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}))(TableCell)\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow)\r\n\r\nfunction createData({ name, email, score }) {\r\n\treturn { name, email, score }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 500,\r\n\t},\r\n\tpaper: {\r\n\t\tborderRadius: 15,\r\n\t},\r\n})\r\n\r\nexport default function ResponsesTable({ responses }) {\r\n\tconst classes = useStyles()\r\n\tconst rows = responses.map((resp) => createData(resp))\r\n\treturn (\r\n\t\t<TableContainer className={classes.paper} component={Paper}>\r\n\t\t\t<Table className={classes.table} aria-label='customized table'>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<StyledTableCell>Name</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align='center'>Email Address</StyledTableCell>\r\n\t\t\t\t\t\t<StyledTableCell align='right'>Score</StyledTableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{rows.map((row) => (\r\n\t\t\t\t\t\t<StyledTableRow key={row.name}>\r\n\t\t\t\t\t\t\t<StyledTableCell component='th' scope='row'>\r\n\t\t\t\t\t\t\t\t{row.name}\r\n\t\t\t\t\t\t\t</StyledTableCell>\r\n\t\t\t\t\t\t\t<StyledTableCell align='center'>{row.email}</StyledTableCell>\r\n\t\t\t\t\t\t\t<StyledTableCell align='right'>{row.score}</StyledTableCell>\r\n\t\t\t\t\t\t</StyledTableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport firebase from '../firebase/firebase'\r\nimport ResponsesTable from '../components/ResponsesTable'\r\n\r\nconst Responses = ({ match }) => {\r\n\tconst quizId = match.params.quizCode\r\n\tconst uid = firebase.auth().currentUser.uid\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [responses, setResponses] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getResponses = async () => {\r\n\t\t\tconst res = await fetch('/API/quizzes/responses', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({ quizCode: quizId, uid }),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\tconst result = await res.json()\r\n\t\t\tsetResponses(result.finalResponse)\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t\tgetResponses()\r\n\t}, [quizId, uid])\r\n\tif (loading) return <LoadingScreen />\r\n\telse\r\n\t\treturn (\r\n\t\t\t<div className='margin-top'>\r\n\t\t\t\t<h2>Responses</h2>\r\n\t\t\t\t<ResponsesTable responses={responses} />\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Responses\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport AttemptedModal from './AttemptedModal'\r\n// Speech Recognition Imports\r\nimport SpeechRecognition, {\r\n\tuseSpeechRecognition\r\n} from 'react-speech-recognition'\r\n\r\nconst AttemptBlindQuiz = ({ match }) => {\r\n\tconst [commands, setCommands] = useState([])\r\n\tconst speak = (string) =>\r\n\t\tsynthRef.current.speak(new SpeechSynthesisUtterance(string))\r\n\t// Quiz Data Model\r\n\tconst [currentIndex, setCurrentIndex] = useState(0)\r\n\tconst quizCode = match.params.quizCode\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [attemptedQuestions, setAttemptedQuestions] = useState([])\r\n\tconst [quizTitle, setQuizTitle] = useState('')\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [result, setResult] = useState({})\r\n\tconst [showModal, setShowModal] = useState(false)\r\n\tlet uid;\r\n\tif (firebase.auth().currentUser) {\r\n\t\tuid = firebase.auth().currentUser.uid\r\n\t}\r\n\r\n\t// Using Speech Recognition Transcript\r\n\tconst { transcript, resetTranscript } = useSpeechRecognition({\r\n\t\tcommands\r\n\t})\r\n\tconst synthRef = React.useRef(window.speechSynthesis)\r\n\tconst spaceFunction = React.useCallback(\r\n\t\t(event) => {\r\n\t\t\tif (event.keyCode === 32) {\r\n\t\t\t\tif (quizTitle === 'ERR:QUIZ_NOT_FOUND')\r\n\t\t\t\t\tspeak('The quiz you requested was not found.')\r\n\t\t\t\t// For Quiz not accessible\r\n\t\t\t\telse if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED')\r\n\t\t\t\t\tspeak('Access is not granted by the creator.')\r\n\t\t\t\telse if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED')\r\n\t\t\t\t\tspeak('You have already attempted this quiz.')\r\n\t\t\t\telse {\r\n\t\t\t\t\tSpeechRecognition.startListening({ continuous: true })\r\n\t\t\t\t\tspeak('Listening Started.')\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[resetTranscript, quizTitle]\r\n\t)\r\n\r\n\t// Speech Recognition useEffect\r\n\tuseEffect(() => {\r\n\t\tif (!SpeechRecognition.browserSupportsSpeechRecognition())\r\n\t\t\talert('Oops, your browser is not supported!')\r\n\t\telse {\r\n\t\t\tdocument.addEventListener('keydown', spaceFunction)\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('keydown', spaceFunction)\r\n\t\t\tSpeechRecognition.abortListening()\r\n\t\t}\r\n\t}, [spaceFunction])\r\n\r\n\t// Fetch Quiz Data useEffect\r\n\tuseEffect(() => {\r\n\t\tconst fetchQuiz = async () => {\r\n\t\t\tconst res = await fetch('/API/quizzes/join', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({ quizId: quizCode }),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst quizData = await res.json()\r\n\t\t\tsetLoading(false)\r\n\t\t\tif (quizData.error) {\r\n\t\t\t\t// SpeechRecognition.stopListening()\r\n\t\t\t\tsetQuizTitle(quizData.error)\r\n\t\t\t\tif (quizData.error === 'ERR:QUIZ_NOT_FOUND')\r\n\t\t\t\t\tspeak('The quiz you requested was not found.')\r\n\t\t\t\t// For Quiz not accessible\r\n\t\t\t\telse if (quizData.error === 'ERR:QUIZ_ACCESS_DENIED')\r\n\t\t\t\t\tspeak('Access is not granted by the creator.')\r\n\t\t\t\telse if (quizData.error === 'ERR:QUIZ_ALREADY_ATTEMPTED')\r\n\t\t\t\t\tspeak('You have already attempted this quiz.')\r\n\t\t\t} else {\r\n\t\t\t\tsetQuizTitle(quizData.title)\r\n\t\t\t\tsetQuestions(quizData.questions)\r\n\r\n\t\t\t\tconst temp = quizData.questions.map((question) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: question.id,\r\n\t\t\t\t\t\ttitle: question.title,\r\n\t\t\t\t\t\toptionType: question.optionType,\r\n\t\t\t\t\t\tselectedOptions: []\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetAttemptedQuestions(temp)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchQuiz()\r\n\t}, [quizCode])\r\n\tconst submitQuiz = React.useCallback(async () => {\r\n\t\t// send attempted Questions to backend\r\n\t\ttry {\r\n\t\t\tconst res = await fetch('/API/quizzes/submit', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tuid,\r\n\t\t\t\t\tquizId: quizCode,\r\n\t\t\t\t\tquestions: attemptedQuestions\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst body = await res.json()\r\n\t\t\tsetResult(body)\r\n\t\t\tsetShowModal(true)\r\n\t\t\tif (body.error === 'ERR:QUIZ_ALREADY_ATTEMPTED')\r\n\t\t\t\tspeak('The Quiz has already been submitted.')\r\n\t\t\telse\r\n\t\t\t\tspeak(`Your score is ${body.score} out of ${attemptedQuestions.length}`)\r\n\t\t\tSpeechRecognition.abortListening()\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('Error Submitting quiz', e)\r\n\t\t}\r\n\t}, [quizCode, attemptedQuestions, uid])\r\n\r\n\t// Commands UseEffect\r\n\tuseEffect(() => {\r\n\t\tconst selectOption = (option) => {\r\n\t\t\tconst temp = [...attemptedQuestions]\r\n\t\t\tconst options = temp[currentIndex].selectedOptions\r\n\t\t\tif (!options.includes(option)) {\r\n\t\t\t\tif (attemptedQuestions[currentIndex].optionType === 'radio')\r\n\t\t\t\t\toptions[0] = option\r\n\t\t\t\telse options.push(option)\r\n\t\t\t\ttemp[currentIndex].selectedOptions = options\r\n\t\t\t\tsetAttemptedQuestions(temp)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst speakQuestion = (index) => {\r\n\t\t\tspeak(`Question number ${index + 1}:`)\r\n\t\t\tspeak(questions[index].title)\r\n\t\t\tlet choice =\r\n\t\t\t\tquestions[index].optionType === 'radio'\r\n\t\t\t\t\t? ' only 1 option.'\r\n\t\t\t\t\t: ' multiple options.'\r\n\r\n\t\t\tspeak('You can choose ' + choice)\r\n\t\t\tquestions[index].options.forEach((op, i) => {\r\n\t\t\t\tspeak(`Option ${i + 1} : ${op.text}`)\r\n\t\t\t})\r\n\t\t}\r\n\t\tconst temp = [\r\n\t\t\t{\r\n\t\t\t\tcommand: ['reset', 'cancel'],\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: 'Instructions',\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t'Use the following voice commands to interact with the application. Start Quiz to initialize the quiz. Repeat the current question command to repeat the focused question. Select or choose option number command for choosing the correct option. Next question to move to the next consecutive question and Previous Question to move to the previous consecutive question.'\r\n\t\t\t\t\t)\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: ['(*) title', '(*) start (*)'],\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tspeak(`The Quiz title is: ${quizTitle}`)\r\n\t\t\t\t\tspeakQuestion(currentIndex)\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: ['select option :option', 'choose option :option'],\r\n\t\t\t\tcallback: (option) => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(option > 0 && option <= questions[currentIndex].options.length) ||\r\n\t\t\t\t\t\t['for', 'to'].some((op) => op === option)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (option === 'for') option = 4\r\n\t\t\t\t\t\telse if (option === 'to') option = 2\r\n\t\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t\t`You chose option ${option} : ${questions[currentIndex].options[option - 1].text\r\n\t\t\t\t\t\t\t}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tselectOption(questions[currentIndex].options[option - 1].text)\r\n\t\t\t\t\t} else if (Number.isInteger(option))\r\n\t\t\t\t\t\tspeak('No such option as ' + option)\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: '(*) next question',\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tif (currentIndex < questions.length - 1) {\r\n\t\t\t\t\t\tsetCurrentIndex(currentIndex + 1)\r\n\t\t\t\t\t\tspeakQuestion(currentIndex + 1)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tspeak('That was the last Question of the Quiz.')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: '(*) previous question',\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tif (currentIndex > 0) {\r\n\t\t\t\t\t\tsetCurrentIndex(currentIndex - 1)\r\n\t\t\t\t\t\tspeakQuestion(currentIndex - 1)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tspeak('That was the first Question of the Quiz.')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: 'submit quiz',\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tif (Object.keys(result).length <= 0) submitQuiz()\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: ['(*) repeat question :number'],\r\n\t\t\t\tcallback: (dummy, number) => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(number > 0 && number <= questions.length) ||\r\n\t\t\t\t\t\t['for', 'to'].some((op) => op === number)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (number === 'for') number = 4\r\n\t\t\t\t\t\telse if (number === 'to') number = 2\r\n\r\n\t\t\t\t\t\tsetCurrentIndex(number - 1)\r\n\t\t\t\t\t\tspeakQuestion(number - 1)\r\n\t\t\t\t\t} else speak('Question Number not recognized. Kindly repeat it')\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcommand: [\r\n\t\t\t\t\t'repeat the current question',\r\n\t\t\t\t\t'repeat the question',\r\n\t\t\t\t\t'repeat question'\r\n\t\t\t\t],\r\n\t\t\t\tcallback: () => {\r\n\t\t\t\t\tsynthRef.current.cancel()\r\n\t\t\t\t\tspeakQuestion(currentIndex)\r\n\t\t\t\t\tresetTranscript()\r\n\t\t\t\t},\r\n\t\t\t\tmatchInterim: true\r\n\t\t\t}\r\n\t\t]\r\n\t\tsetCommands(temp)\r\n\t}, [\r\n\t\tquizTitle,\r\n\t\tresetTranscript,\r\n\t\tquestions,\r\n\t\tcurrentIndex,\r\n\t\tattemptedQuestions,\r\n\t\tsubmitQuiz,\r\n\t\tresult\r\n\t])\r\n\r\n\tconst handleOptionSelect = (e, option, index) => {\r\n\t\tconst temp = [...attemptedQuestions]\r\n\t\tconst options = temp[index].selectedOptions\r\n\t\tif (!options.includes(option) && e.target.checked) {\r\n\t\t\tif (attemptedQuestions[index].optionType === 'radio') options[0] = option\r\n\t\t\telse options.push(option)\r\n\t\t}\r\n\t\tif (options.includes(option) && !e.target.checked) {\r\n\t\t\tconst i = options.indexOf(option)\r\n\t\t\toptions.splice(i, 1)\r\n\t\t}\r\n\t\ttemp[index].selectedOptions = options\r\n\t\tsetAttemptedQuestions(temp)\r\n\t}\r\n\r\n\tif (loading) return <LoadingScreen />\r\n\r\n\t// For Quiz not Found\r\n\tif (quizTitle === 'ERR:QUIZ_NOT_FOUND') {\r\n\t\t// synthRef.current.cancel()\r\n\t\t// speak('The quiz you requested was not found.')\r\n\t\t// resetTranscript()\r\n\t\treturn (\r\n\t\t\t<div className='loading'>\r\n\t\t\t\t<h1>404 Quiz Not Found!</h1>\r\n\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t// For Quiz not accessible\r\n\telse if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED') {\r\n\t\t// speak('Access is not granted by the creator.')\r\n\t\treturn (\r\n\t\t\t<div className='loading'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tQuiz Access is Not Granted by the Creator. Please contact Quiz\r\n\t\t\t\t\tCreator.\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED') {\r\n\t\t// speak('You have already attempted this quiz.')\r\n\t\treturn (\r\n\t\t\t<div className='loading'>\r\n\t\t\t\t<h2>You have already taken the Quiz.</h2>\r\n\t\t\t\t<div id='logo-name'>\r\n\t\t\t\t\t<b>Quiz</b>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tGo back to <Link to='/join-quiz'>Join Quiz </Link>Page.\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else\r\n\t\treturn (\r\n\t\t\t<div id='main-body'>\r\n\t\t\t\t<div id='create-quiz-body'>\r\n\t\t\t\t\t<div className='quiz-header'>\r\n\t\t\t\t\t\t<h2>{quizTitle}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{questions.map((question, index) => (\r\n\t\t\t\t\t\t<div className='attemptQuestionCard' key={index}>\r\n\t\t\t\t\t\t\t<div id='title'>{question.title}</div>\r\n\t\t\t\t\t\t\t<div className='option-div'>\r\n\t\t\t\t\t\t\t\t{question.options.map((option, ind) => (\r\n\t\t\t\t\t\t\t\t\t<div className='option' key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t{question.optionType === 'radio' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={`option${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tattemptedQuestions.length\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? attemptedQuestions[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].selectedOptions.includes(option.text)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(e, option.text, index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='option'\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tattemptedQuestions.length\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? attemptedQuestions[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].selectedOptions.includes(option.text)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOptionSelect(e, option.text, index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t<label style={{ padding: '0px 5px' }}>{option.text}</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<button className='button wd-200' onClick={submitQuiz}>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<AttemptedModal\r\n\t\t\t\t\t\tresult={result}\r\n\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\ttotalScore={questions.length}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default AttemptBlindQuiz\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Modal } from '@material-ui/core'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport './AddQuestionModal.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: \"10px\",\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 0,\r\n    width: '90%',\r\n    borderRadius: '10px',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}))\r\n\r\nexport default function UsernameModal({ setUsername }) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(true)\r\n  const [path, setPath] = useState('')\r\n  const [username, setName] = useState('')\r\n  const height = window.innerHeight, width = window.innerWidth\r\n  useEffect(() => {\r\n  }, [open])\r\n  const addQuestionCallBack = async () => {\r\n    // Error Handling\r\n    if (username) {\r\n      const res = await fetch('/API/users/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ name: username }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const body = await res.json()\r\n      localStorage.setItem('username', username)\r\n      localStorage.setItem('id', body.id)\r\n      setUsername(username)\r\n      setPath('/join-quiz')\r\n    }\r\n  }\r\n\r\n  if (!!(localStorage.getItem('username'))) {\r\n    return <Redirect push to='/' />\r\n  }\r\n\r\n  if (!!path) {\r\n    return <Redirect push to={path} />\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby='transition-modal-title'\r\n      aria-describedby='transition-modal-description'\r\n      className={classes.modal}\r\n      style={{ width: '400px', margin: 'auto' }}\r\n      open={open}\r\n      disableEnforceFocus={true}\r\n    >\r\n      <div className={classes.paper}>\r\n        <div className='questionCard'>\r\n          <div id='title'>Name:</div>\r\n          <input\r\n            type='text'\r\n            autoFocus\r\n            value={username}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className='input-text question'\r\n            placeholder='Type Name Here'\r\n          />\r\n        </div>\r\n        <div className={classes.buttons}>\r\n          <button\r\n            // disabled={!(optionsArray.length && titleField.length)}\r\n            className='button'\r\n            color='secondary'\r\n            variant='contained'\r\n            style={{ width: '100%' }}\r\n            onClick={addQuestionCallBack}\r\n          >\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Row, Col, Toast, ToastContainer } from 'react-bootstrap'\r\nimport './UserDashBoard.css'\r\nimport CreatedQuizCard from '../components/CreatedQuizCard'\r\nimport JoinedQuizCard from '../components/JoinedQuizCard'\r\nimport LoadingScreen from './LoadingScreen'\r\nimport CreateQuiz from './CreateQuiz'\r\nimport firebase from '../firebase/firebase'\r\n\r\nconst AdminDashboard = ({ user, showToast }) => {\r\n  const [createdQuizzes, setCreatedQuizzes] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [editQuiz, setEditQuiz] = useState([])\r\n  const [allQuizzes, setAllQuizzes] = useState([])\r\n  const [path, setPath] = useState('')\r\n  const [show, setShow] = useState(false)\r\n  const [toastTitle, setToastTitle] = useState('')\r\n  const [toastContent, setToastContent] = useState('')\r\n  // Fetch Data from the API\r\n  useEffect(() => {\r\n    // if (!user.uid) {\r\n    // \tsetLoading(false)\r\n    // \treturn\r\n    // }\r\n    const fetchQuizData = async () => {\r\n      let results, quizData\r\n      if (!!user && !!user.uid) {\r\n        results = await fetch(`/API/users/${user.uid}`)\r\n        quizData = await results.json()\r\n        if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz)\r\n        console.log('created quiz:', quizData.createdQuiz)\r\n        results = await fetch(`/API/quizzes`)\r\n        quizData = await results.json()\r\n        console.log('all quiz:', quizData)\r\n        if (quizData.quizData) {\r\n          setAllQuizzes(quizData.quizData)\r\n        }\r\n      }\r\n      setLoading(false)\r\n    }\r\n    fetchQuizData()\r\n  }, [user])\r\n\r\n  const editQuizHandle = async (title, questions, isOpen) => {\r\n    if (!title) setEditQuiz([])\r\n    else {\r\n      setLoading(true)\r\n      console.dir({\r\n        quizId: createdQuizzes[editQuiz]._id,\r\n        uid: user.uid,\r\n        title,\r\n        questions,\r\n        isOpen,\r\n      })\r\n      const results = await fetch('/API/quizzes/edit', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          quizId: createdQuizzes[editQuiz]._id,\r\n          uid: user.uid,\r\n          title,\r\n          questions,\r\n          isOpen,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const submitData = await results.json()\r\n      console.dir(submitData)\r\n      let temp = [...createdQuizzes]\r\n      temp[editQuiz[0]].title = title\r\n      temp[editQuiz[0]].questions = questions\r\n      temp[editQuiz[0]].isOpen = isOpen\r\n      setCreatedQuizzes(temp)\r\n      temp = [...allQuizzes]\r\n      const index = temp.findIndex(quiz => quiz._id === createdQuizzes[editQuiz]._id)\r\n      temp.splice(index, 1)\r\n      setAllQuizzes(temp)\r\n      setEditQuiz([])\r\n      setLoading(false)\r\n\r\n      // setToastTitle('Edit Quiz')\r\n      // setToastContent('Success')\r\n      // setShow(true)\r\n      showToast('Edit Quiz', 'Success')\r\n    }\r\n  }\r\n\r\n  const deleteQuiz = async index => {\r\n    setLoading(true)\r\n    const id = createdQuizzes[index]._id\r\n    const results = await fetch(`/API/quizzes/${createdQuizzes[index]._id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const submitData = await results.json()\r\n    console.dir(submitData)\r\n    let temp = [...createdQuizzes]\r\n    temp.splice(index, 1)\r\n    setCreatedQuizzes(temp)\r\n    temp = [...allQuizzes]\r\n    const ind = temp.findIndex(quiz => quiz._id === id);\r\n    temp.splice(ind, 1)\r\n    setAllQuizzes(temp)\r\n    setEditQuiz([])\r\n    setLoading(false)\r\n    showToast('Delete Quiz', 'Success')\r\n  }\r\n\r\n  if (loading) return <LoadingScreen />\r\n\r\n  if (path) {\r\n    return localStorage.getItem('username') == undefined ? <Redirect push to='join-quiz' /> : <Redirect push to={`/attempt-quiz/${path}`} />\r\n  }\r\n\r\n  if (editQuiz.length)\r\n    return (\r\n      <CreateQuiz\r\n        user={user}\r\n        quizTitle={createdQuizzes[editQuiz].title}\r\n        questions={createdQuizzes[editQuiz].questions}\r\n        isOpen={createdQuizzes[editQuiz].isOpen}\r\n        editQuizHandle={editQuizHandle}\r\n      />\r\n    )\r\n\r\n  return (\r\n    <div className='dash-body' style={{ marginTop: '100px' }}>\r\n      <Row>\r\n        <Col xs={6}>\r\n          <ToastContainer position=\"top-end\" className=\"p-3\">\r\n            <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide animation>\r\n              <Toast.Header>\r\n                <img\r\n                  src=\"holder.js/20x20?text=%20\"\r\n                  className=\"rounded me-2\"\r\n                  alt=\"\"\r\n                />\r\n                <strong className=\"me-auto\">{toastTitle}</strong>\r\n              </Toast.Header>\r\n              <Toast.Body>{toastContent}</Toast.Body>\r\n            </Toast>\r\n          </ToastContainer>\r\n        </Col>\r\n      </Row>\r\n      {\r\n        !!(firebase.auth().currentUser) && <div className='quizzes'>\r\n          <div className='heading'>\r\n            <div className='line-left' />\r\n            <h2>My Quiz </h2>\r\n            <div className='line' />\r\n          </div>\r\n          <div className='card-holder' style={{ justifyContent: 'center' }}>\r\n            {createdQuizzes.map((quiz, key) => (\r\n              <CreatedQuizCard\r\n                key={key}\r\n                index={key}\r\n                setEditQuiz={setEditQuiz}\r\n                deleteQuiz={deleteQuiz}\r\n                title={quiz.title}\r\n                code={quiz._id}\r\n                questions={quiz.questions.length}\r\n                isOpen={quiz.isOpen}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className='heading'>\r\n            <div className='line-left' />\r\n            <h2>All Quiz </h2>\r\n            <div className='line' />\r\n          </div>\r\n          <div className='card-holder' style={{ justifyContent: 'center' }}>\r\n            {\r\n              allQuizzes.map((quiz, key) => (\r\n                <JoinedQuizCard\r\n                  key={key}\r\n                  title={quiz.title}\r\n                  // score={quiz.responses[0].score}\r\n                  questions={quiz.questions.length}\r\n                  id={quiz._id}\r\n                  joinQuiz={setPath}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","import { Switch, Route } from 'react-router-dom'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Toast, ToastContainer } from 'react-bootstrap'\r\nimport firebase from './firebase/firebase'\r\n\r\n// Stylesheet\r\nimport './App.css'\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// Components\r\nimport Home from './screens/Home'\r\nimport CreateQuiz from './screens/CreateQuiz'\r\nimport JoinQuiz from './screens/JoinQuiz'\r\nimport UserDashboard from './screens/UserDashboard'\r\nimport CreatedSuccessfully from './screens/CreatedSuccessfully'\r\nimport NotFoundPage from './screens/NotFoundPage'\r\nimport AttemptQuiz from './screens/AttemptQuiz'\r\nimport AppBar from './components/AppBar'\r\nimport Responses from './screens/Responses'\r\nimport AttemptBlindQuiz from './screens/AttemptBlindQuiz'\r\nimport UsernameModal from './components/UsernameModal'\r\nimport AdminDashboard from './screens/AdminDashboard'\r\n\r\nconst App = () => {\r\n\tconst [user, setUser] = useState({})\r\n\tconst [username, setUsername] = useState(localStorage.getItem('username'))\r\n\tconst [show, setShow] = useState(false)\r\n\tconst [toastTitle, setToastTitle] = useState('')\r\n\tconst [toastContent, setToastContent] = useState('')\r\n\tuseEffect(() => {\r\n\t\tconst createUserInDB = async () => {\r\n\t\t\tif (user.uid)\r\n\t\t\t\tif (\r\n\t\t\t\t\tfirebase.auth().currentUser.metadata.lastSignInTime ===\r\n\t\t\t\t\tfirebase.auth().currentUser.metadata.creationTime\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait fetch('/API/users/create', {\r\n\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\t\tuid: user.uid,\r\n\t\t\t\t\t\t\t\tname: user.name,\r\n\t\t\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.log('User Creation Error: ', error)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tcreateUserInDB()\r\n\t}, [user])\r\n\tconst showToast = (title, content) => {\r\n\t\tsetShow(true)\r\n\t\tsetToastTitle(title)\r\n\t\tsetToastContent(content)\r\n\t}\r\n\treturn (\r\n\t\t<div className='App flex-container grow'>\r\n\t\t\t<div className='fixed'>\r\n\t\t\t\t<AppBar user={user} setUser={setUser} setUsername={setUsername} />\r\n\t\t\t</div>\r\n\t\t\t<Row style={{ marginTop: '100px' }}>\r\n\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t<ToastContainer position=\"top-end\" className=\"p-3\">\r\n\t\t\t\t\t\t<Toast onClose={() => setShow(false)} show={show} delay={3000} autohide animation>\r\n\t\t\t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"holder.js/20x20?text=%20\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"rounded me-2\"\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<strong className=\"me-auto\">{toastTitle}</strong>\r\n\t\t\t\t\t\t\t</Toast.Header>\r\n\t\t\t\t\t\t\t<Toast.Body>{toastContent}</Toast.Body>\r\n\t\t\t\t\t\t</Toast>\r\n\t\t\t\t\t</ToastContainer>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/name'>\r\n\t\t\t\t\t<UsernameModal setUsername={setUsername} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/admin'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!firebase.auth().currentUser ? <Home setUser={setUser} user={user} /> : <AdminDashboard setUser={setUser} user={user} showToast={showToast} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/dashboard'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!!firebase.auth().currentUser ? <AdminDashboard setUser={setUser} user={user} showToast={showToast} /> : <UserDashboard user={user} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/create-quiz'>\r\n\t\t\t\t\t<CreateQuiz user={user} showToast={showToast} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/created-successfully/:quizCode'\r\n\t\t\t\t\tcomponent={CreatedSuccessfully}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path='/join-quiz'>\r\n\t\t\t\t\t<JoinQuiz user={user} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/attempt-quiz/:quizCode' component={AttemptQuiz} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/attempt-blind-quiz/:quizCode'\r\n\t\t\t\t\tcomponent={AttemptBlindQuiz}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path='/responses/:quizCode' component={Responses} />\r\n\t\t\t\t<Route path='/'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!!firebase.auth().currentUser ? <AdminDashboard setUser={setUser} user={user} showToast={showToast} /> : <UserDashboard user={user} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n/*\r\n!firebase.auth().currentUser ?\r\n*/","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}